#lang racket
; Упражнение на функции от по-висок ред
; foldl (свиване наляво), foldr (свиване надясно)

; Всички задачи да се решат чрез foldl или foldr
; (ако не е указано с коя от двете функции точно)

; Задача 0: Да се дефинира функция (sum-sq l), която пресмята
; сумата на квадратите на елементите на дадения списък l

; Задача 1: Да се дефинира функция (reverse l), която по даден списък l
; връща обърнатия списък на l

; Задача 2: Да се дефинира функция (increasing? l), която проверява
; дали елементите на списъка l образуват растяща редица

; Задача 3: Да се дефинира функция (zig-zag? l), която проверява дали
; всеки от елементите в l е обграден или само от по-големи от него,
; или само от по-малки

; Задача 4: Да се дефинира фуннкция (unique l), която по подаден
; списък l връща само уникалните елементи от него

; Задача 5: Да се дефинира функция (intersect l1 l2), която връща сечението
; на списъците l1 и l2 (т.е. списък съдържащ общите им елементи)

; Задача 6: Да се дефинира функция (sublists l), която по даден списък l
; връща всички подсписъци на дадения списък
